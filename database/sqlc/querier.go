// Code generated by sqlc. DO NOT EDIT.
// versions:
//   sqlc v1.27.0

package database

import (
	"context"

	"github.com/jackc/pgx/v5/pgtype"
)

type Querier interface {
	CheckForExistingUser(ctx context.Context, email string) (bool, error)
	CreateJWTKey(ctx context.Context, arg CreateJWTKeyParams) (Jwtkey, error)
	CreateSession(ctx context.Context, arg CreateSessionParams) (Session, error)
	CreateUser(ctx context.Context, arg CreateUserParams) (User, error)
	CreateVerificationCode(ctx context.Context, arg CreateVerificationCodeParams) (VerificationCode, error)
	DeleteSessions(ctx context.Context, id int64) error
	DeleteUser(ctx context.Context, email string) error
	GetActiveKey(ctx context.Context, isActive pgtype.Bool) (Jwtkey, error)
	GetUserByEmail(ctx context.Context, email string) (User, error)
	GetUserByID(ctx context.Context, id int64) (User, error)
	GetUserSessions(ctx context.Context, arg GetUserSessionsParams) ([]Session, error)
	UpdateJWTKeys(ctx context.Context, arg UpdateJWTKeysParams) (Jwtkey, error)
	UpdateSession(ctx context.Context, id int64) (Session, error)
	UpdateUser(ctx context.Context, arg UpdateUserParams) (User, error)
	UpdateVerificationCodeStatus(ctx context.Context, arg UpdateVerificationCodeStatusParams) (VerificationCode, error)
}

var _ Querier = (*Queries)(nil)
